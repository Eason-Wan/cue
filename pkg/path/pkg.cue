// Code generated by cuelang.org/go/pkg/gen. DO NOT EDIT.
package path

OS:      Unix | Windows | Plan9
Unix:    "unix"
Windows: "windows"
Plan9:   "plan9"
funcs: Match: {
	in: {
		#A0: string
		#A1: string
		#A2: OS
	}
	out: bool
	in: {
		#A0: string
		#A1: string
		#A2: string
	}
	out: bool
}
Unix:    "unix"
Windows: "windows"
Plan9:   "plan9"
funcs: Clean: {
	in: {
		#A0: string
		#A1: OS
	}
	out: string
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: ToSlash: {
	in: {
		#A0: string
		#A1: OS
	}
	out: string
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: FromSlash: {
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: SplitList: {
	in: {
		#A0: string
		#A1: OS
	}
	out: [...string]
	in: {
		#A0: string
		#A1: string
	}
	out: [... string]
}
funcs: Split: {
	in: {
		#A0: string
		#A1: OS
	}
	out: [...string]
	in: {
		#A0: string
		#A1: string
	}
	out: [... string]
}
funcs: Join: {
	in: {
		#A0: [...string]
		#A1: OS
	}
	out: string
	in: {
		#A0: [... string]
		#A1: string
	}
	out: string
}
funcs: Ext: {
	in: {
		#A0: string
		#A1: OS
	}
	out: string
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: Resolve: {
	in: {
		#A0: string
		#A1: string
		#A2: OS
	}
	out: string
	in: {
		#A0: string
		#A1: string
		#A2: string
	}
	out: string
}
funcs: Rel: {
	in: {
		#A0: string
		#A1: string
		#A2: OS
	}
	out: string
	in: {
		#A0: string
		#A1: string
		#A2: string
	}
	out: string
}
funcs: Base: {
	in: {
		#A0: string
		#A1: OS
	}
	out: string
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: Dir: {
	in: {
		#A0: string
		#A1: OS
	}
	out: string
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: IsAbs: {
	in: {
		#A0: string
		#A1: OS
	}
	out: bool
	in: {
		#A0: string
		#A1: string
	}
	out: bool
}
funcs: VolumeName: {
	in: {
		#A0: string
		#A1: OS
	}
	out: string
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
