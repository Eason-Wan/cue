// Code generated by cuelang.org/go/pkg/gen. DO NOT EDIT.
package strings

funcs: ByteAt: {
	in: {
		#A0: bytes | string
		#A1: int64
	}
	out: uint8
}
funcs: ByteSlice: {
	in: {
		#A0: bytes | string
		#A1: int64
		#A2: int64
	}
	out: bytes | string
}
funcs: Runes: {
	in: #A0: string
	out: [...]
}
funcs: MinRunes: {
	in: {
		#A0: string
		#A1: int64
	}
	out: bool
}
funcs: MaxRunes: {
	in: {
		#A0: string
		#A1: int64
	}
	out: bool
}
funcs: ToTitle: {
	in: #A0: string
	out: string
}
funcs: ToCamel: {
	in: #A0: string
	out: string
}
funcs: SliceRunes: {
	in: {
		#A0: string
		#A1: int64
		#A2: int64
	}
	out: string
}
funcs: Compare: {
	in: {
		#A0: string
		#A1: string
	}
	out: int64
}
funcs: Count: {
	in: {
		#A0: string
		#A1: string
	}
	out: int64
}
funcs: Contains: {
	in: {
		#A0: string
		#A1: string
	}
	out: bool
}
funcs: ContainsAny: {
	in: {
		#A0: string
		#A1: string
	}
	out: bool
}
funcs: LastIndex: {
	in: {
		#A0: string
		#A1: string
	}
	out: int64
}
funcs: IndexAny: {
	in: {
		#A0: string
		#A1: string
	}
	out: int64
}
funcs: LastIndexAny: {
	in: {
		#A0: string
		#A1: string
	}
	out: int64
}
funcs: SplitN: {
	in: {
		#A0: string
		#A1: string
		#A2: int64
	}
	out: [... string]
}
funcs: SplitAfterN: {
	in: {
		#A0: string
		#A1: string
		#A2: int64
	}
	out: [... string]
}
funcs: Split: {
	in: {
		#A0: string
		#A1: string
	}
	out: [... string]
}
funcs: SplitAfter: {
	in: {
		#A0: string
		#A1: string
	}
	out: [... string]
}
funcs: Fields: {
	in: #A0: string
	out: [... string]
}
funcs: Join: {
	in: {
		#A0: [... string]
		#A1: string
	}
	out: string
}
funcs: HasPrefix: {
	in: {
		#A0: string
		#A1: string
	}
	out: bool
}
funcs: HasSuffix: {
	in: {
		#A0: string
		#A1: string
	}
	out: bool
}
funcs: Repeat: {
	in: {
		#A0: string
		#A1: int64
	}
	out: string
}
funcs: ToUpper: {
	in: #A0: string
	out: string
}
funcs: ToLower: {
	in: #A0: string
	out: string
}
funcs: Trim: {
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: TrimLeft: {
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: TrimRight: {
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: TrimSpace: {
	in: #A0: string
	out: string
}
funcs: TrimPrefix: {
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: TrimSuffix: {
	in: {
		#A0: string
		#A1: string
	}
	out: string
}
funcs: Replace: {
	in: {
		#A0: string
		#A1: string
		#A2: string
		#A3: int64
	}
	out: string
}
funcs: Index: {
	in: {
		#A0: string
		#A1: string
	}
	out: int64
}
