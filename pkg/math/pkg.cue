// Code generated by cuelang.org/go/pkg/gen. DO NOT EDIT.
package math

MaxExp:        2147483647
MinExp:        -2147483648
MaxPrec:       4294967295
ToNearestEven: 0
ToNearestAway: 1
ToZero:        2
AwayFromZero:  3
ToNegativeInf: 4
ToPositiveInf: 5
Below:         -1
Exact:         0
Above:         1
funcs: Jacobi: {
	in: [{
		name: "x"
		type: int
	}, {
		name: "y"
		type: int
	}]
	out: int64
}
MaxBase: 62
funcs: Floor: {
	in: [{
		name: "x"
		type: number
	}]
	out: int
}
funcs: Ceil: {
	in: [{
		name: "x"
		type: number
	}]
	out: int
}
funcs: Trunc: {
	in: [{
		name: "x"
		type: number
	}]
	out: int
}
funcs: Round: {
	in: [{
		name: "x"
		type: number
	}]
	out: int
}
funcs: RoundToEven: {
	in: [{
		name: "x"
		type: number
	}]
	out: int
}
funcs: MultipleOf: {
	in: [{
		name: "x"
		type: number
	}, {
		name: "y"
		type: number
	}]
	out: bool
}
funcs: Abs: {
	in: [{
		name: "x"
		type: number
	}]
	out: number
}
funcs: Acosh: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Asin: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Acos: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Asinh: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Atan: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Atan2: {
	in: [{
		name: "y"
		type: float64
	}, {
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Atanh: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Cbrt: {
	in: [{
		name: "x"
		type: number
	}]
	out: number
}
E:       2.71828182845904523536028747135266249775724709369995957496696763
Pi:      3.14159265358979323846264338327950288419716939937510582097494459
Phi:     1.61803398874989484820458683436563811772030917980576286213544861
Sqrt2:   1.41421356237309504880168872420969807856967187537694807317667974
SqrtE:   1.64872127070012814684865078781416357165377610071014801157507931
SqrtPi:  1.77245385090551602729816748334114518279754945612238712821380779
SqrtPhi: 1.27201964951406896425242246173749149171560804184009624861664038
Ln2:     0.693147180559945309417232121458176568075500134360255254120680009
Log2E:   1.442695040888963407359924681001892137426645954152985934135449408
Ln10:    2.3025850929940456840179914546843642076011014886287729760333278
Log10E:  0.43429448190325182765112891891660508229439700580366656611445378
funcs: Copysign: {
	in: [{
		name: "x"
		type: number
	}, {
		name: "y"
		type: number
	}]
	out: number
}
funcs: Dim: {
	in: [{
		name: "x"
		type: number
	}, {
		name: "y"
		type: number
	}]
	out: number
}
funcs: Erf: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Erfc: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Erfinv: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Erfcinv: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Exp: {
	in: [{
		name: "x"
		type: number
	}]
	out: number
}
funcs: Exp2: {
	in: [{
		name: "x"
		type: number
	}]
	out: number
}
funcs: Expm1: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Gamma: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Hypot: {
	in: [{
		name: "p"
		type: float64
	}, {
		name: "q"
		type: float64
	}]
	out: float64
}
funcs: J0: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Y0: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: J1: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Y1: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Jn: {
	in: [{
		name: "n"
		type: int64
	}, {
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Yn: {
	in: [{
		name: "n"
		type: int64
	}, {
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Ldexp: {
	in: [{
		name: "frac"
		type: float64
	}, {
		name: "exp"
		type: int64
	}]
	out: float64
}
funcs: Log: {
	in: [{
		name: "x"
		type: number
	}]
	out: number
}
funcs: Log10: {
	in: [{
		name: "x"
		type: number
	}]
	out: number
}
funcs: Log2: {
	in: [{
		name: "x"
		type: number
	}]
	out: number
}
funcs: Log1p: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Logb: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Ilogb: {
	in: [{
		name: "x"
		type: float64
	}]
	out: int64
}
funcs: Mod: {
	in: [{
		name: "x"
		type: float64
	}, {
		name: "y"
		type: float64
	}]
	out: float64
}
funcs: Pow: {
	in: [{
		name: "x"
		type: number
	}, {
		name: "y"
		type: number
	}]
	out: number
}
funcs: Pow10: {
	in: [{
		name: "n"
		type: int32
	}]
	out: number
}
funcs: Remainder: {
	in: [{
		name: "x"
		type: float64
	}, {
		name: "y"
		type: float64
	}]
	out: float64
}
funcs: Signbit: {
	in: [{
		name: "x"
		type: number
	}]
	out: bool
}
funcs: Cos: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Sin: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Sinh: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Cosh: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Sqrt: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Tan: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
funcs: Tanh: {
	in: [{
		name: "x"
		type: float64
	}]
	out: float64
}
